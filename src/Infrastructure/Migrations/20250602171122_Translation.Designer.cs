// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20250602171122_Translation")]
    partial class Translation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Core.CultureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("system");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("CultureType", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14),
                            Type = 1,
                            Value = "hr-HR"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14),
                            Type = 2,
                            Value = "en-US"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("system");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("CultureTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmailConfirmationToken")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CultureTypeId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14),
                            CultureTypeId = 1,
                            Email = "admin@email.hr",
                            FullName = "Administrator User",
                            PasswordHash = "$2a$11$JirWzDstghZJWJ6teyzeIuSQxz2ZIq9Xt67PDrYoGv8MinnPtXRMm",
                            Telephone = "+385955535353"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14),
                            CultureTypeId = 2,
                            Email = "client@email.hr",
                            FullName = "Client User",
                            PasswordHash = "$2a$11$wQOVMi39iC5ILUYSPFh69u431XPMaL9KJFDXX1OaBTRCEjhB6rmES",
                            Telephone = "+385955585353"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14),
                            CultureTypeId = 2,
                            Email = "bussiness@email.hr",
                            FullName = "Business user",
                            PasswordHash = "$2a$11$5FCSOG1dbgAenQDR4janPeHYweha9wxXnT55EuzUTS45z77viF9eS",
                            Telephone = "+385956685353"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Security.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("system");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Claim", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14),
                            Name = "FullAccess",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14),
                            Name = "ManageUsers",
                            Type = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.Security.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("system");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonRevoked")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ReplacedByToken")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevokedBy")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken", "Security");
                });

            modelBuilder.Entity("Domain.Entities.Security.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("system");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Role", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14),
                            Name = "Administrator",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14),
                            Name = "Business",
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14),
                            Name = "Client",
                            Type = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.Security.UserClaim", b =>
                {
                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("ClaimId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim", "Security");

                    b.HasData(
                        new
                        {
                            ClaimId = 2,
                            UserId = 2,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Security.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", "Security");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            UserId = 1,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14)
                        },
                        new
                        {
                            RoleId = 2,
                            UserId = 1,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14)
                        },
                        new
                        {
                            RoleId = 3,
                            UserId = 1,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14)
                        },
                        new
                        {
                            RoleId = 2,
                            UserId = 3,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14)
                        },
                        new
                        {
                            RoleId = 3,
                            UserId = 2,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 953, DateTimeKind.Utc).AddTicks(14)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Translation.ClaimTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ClaimTranslation", "Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("204b62a4-80cc-4cec-9431-ce18adddbc3b"),
                            ClaimId = 1,
                            Content = "Puno pravo",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 952, DateTimeKind.Utc).AddTicks(3822),
                            CultureName = "hr-HR"
                        },
                        new
                        {
                            Id = new Guid("c2961012-5ecf-44e1-a87e-da1e716034fb"),
                            ClaimId = 1,
                            Content = "Full access",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 952, DateTimeKind.Utc).AddTicks(3822),
                            CultureName = "en-US"
                        },
                        new
                        {
                            Id = new Guid("7c867940-8cfc-4a07-a1d5-bf910a88d559"),
                            ClaimId = 2,
                            Content = "Upravljanje korisnicima",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 952, DateTimeKind.Utc).AddTicks(3822),
                            CultureName = "hr-HR"
                        },
                        new
                        {
                            Id = new Guid("a176ee71-ea72-4d15-bec2-3416091abc76"),
                            ClaimId = 2,
                            Content = "Managing users",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 952, DateTimeKind.Utc).AddTicks(3822),
                            CultureName = "en-US"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Translation.CultureTypeTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CultureTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CultureTypeId");

                    b.ToTable("CultureTypeTranslation", "Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca109a4f-78de-4684-8b08-89c8f7a7a306"),
                            Content = "Hrvatski",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 952, DateTimeKind.Utc).AddTicks(3822),
                            CultureName = "hr-HR",
                            CultureTypeId = 1
                        },
                        new
                        {
                            Id = new Guid("8567bd6c-bdc6-4c14-9bc3-d9c2a26de6f2"),
                            Content = "English",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 952, DateTimeKind.Utc).AddTicks(3822),
                            CultureName = "en-US",
                            CultureTypeId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.Translation.RoleTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoleTranslation", "Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("90d85150-c088-4ec0-9488-40b1bf2f9874"),
                            Content = "Administrator",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 952, DateTimeKind.Utc).AddTicks(3822),
                            CultureName = "hr-HR",
                            RoleId = 1
                        },
                        new
                        {
                            Id = new Guid("b29728c4-55c5-4b2f-9e5a-1a1bc37bf337"),
                            Content = "Administrator",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 952, DateTimeKind.Utc).AddTicks(3822),
                            CultureName = "en-US",
                            RoleId = 1
                        },
                        new
                        {
                            Id = new Guid("0e6894fe-26e4-4f82-9d19-6338f03f122f"),
                            Content = "Bussiness",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 952, DateTimeKind.Utc).AddTicks(3822),
                            CultureName = "hr-HR",
                            RoleId = 1
                        },
                        new
                        {
                            Id = new Guid("69fe8877-a63e-4f08-98b5-62c7e6acf4cb"),
                            Content = "Poslovni",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 952, DateTimeKind.Utc).AddTicks(3822),
                            CultureName = "en-US",
                            RoleId = 1
                        },
                        new
                        {
                            Id = new Guid("3f3e0e4c-6fc4-4c4d-bb66-11f65207e58c"),
                            Content = "Klijent",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 952, DateTimeKind.Utc).AddTicks(3822),
                            CultureName = "hr-HR",
                            RoleId = 3
                        },
                        new
                        {
                            Id = new Guid("09b1fcf0-5969-49f3-8aaf-dc6724f3c1e6"),
                            Content = "Client",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 11, 21, 952, DateTimeKind.Utc).AddTicks(3822),
                            CultureName = "en-US",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.Core.User", b =>
                {
                    b.HasOne("Domain.Entities.Core.CultureType", "CultureType")
                        .WithMany()
                        .HasForeignKey("CultureTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Country");

                            b1.Property<string>("PostalCode")
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)")
                                .HasColumnName("PostalCode");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Street");

                            b1.HasKey("UserId");

                            b1.ToTable("User", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = 1,
                                    City = "Zagreb",
                                    Country = "Croatia",
                                    PostalCode = "10000",
                                    Street = "Ilica 10"
                                },
                                new
                                {
                                    UserId = 2,
                                    City = "Zagreb",
                                    Country = "Croatia",
                                    PostalCode = "10000",
                                    Street = "Ilica 255"
                                },
                                new
                                {
                                    UserId = 3,
                                    City = "Zagreb",
                                    Country = "Croatia",
                                    PostalCode = "10000",
                                    Street = "Taborska 15"
                                });
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("CultureType");
                });

            modelBuilder.Entity("Domain.Entities.Security.RefreshToken", b =>
                {
                    b.HasOne("Domain.Entities.Core.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Security.UserClaim", b =>
                {
                    b.HasOne("Domain.Entities.Security.Claim", "Claim")
                        .WithMany()
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Core.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Security.UserRole", b =>
                {
                    b.HasOne("Domain.Entities.Security.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Core.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Translation.CultureTypeTranslation", b =>
                {
                    b.HasOne("Domain.Entities.Core.CultureType", null)
                        .WithMany("Translations")
                        .HasForeignKey("CultureTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Core.CultureType", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("Domain.Entities.Core.User", b =>
                {
                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
