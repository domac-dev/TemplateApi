// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(Database))]
    partial class DatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Core.CultureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("system");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("CultureType", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643),
                            Type = 1,
                            Value = "hr-HR"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643),
                            Type = 2,
                            Value = "en-US"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Core.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("system");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("CultureTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmailConfirmationToken")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CultureTypeId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643),
                            CultureTypeId = 1,
                            Email = "admin@email.hr",
                            FullName = "Administrator User",
                            PasswordHash = "$2a$11$ss/EKhbB/Sb0F6adJotyZ.Ngna/8myEOIeO6U3xeM3xeZbl4loAW.",
                            Telephone = "+385955535353"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643),
                            CultureTypeId = 2,
                            Email = "client@email.hr",
                            FullName = "Client User",
                            PasswordHash = "$2a$11$bu35699st1JFhR7YUrrgS.q4I5MUTih16XVlhzpodGfD12TKf2VUq",
                            Telephone = "+385955585353"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643),
                            CultureTypeId = 2,
                            Email = "bussiness@email.hr",
                            FullName = "Business user",
                            PasswordHash = "$2a$11$3Bd1YIlXpaBxhfIOKS57rugf.3hCrroWMMc3Fe1PStfbCS1o.URzC",
                            Telephone = "+385956685353"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Security.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("system");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Claim", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643),
                            Name = "FullAccess",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643),
                            Name = "ManageUsers",
                            Type = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.Security.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("system");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonRevoked")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ReplacedByToken")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevokedBy")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken", "Security");
                });

            modelBuilder.Entity("Domain.Entities.Security.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValue("system");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Role", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643),
                            Name = "Administrator",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643),
                            Name = "Business",
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643),
                            Name = "Client",
                            Type = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.Security.UserClaim", b =>
                {
                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("ClaimId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim", "Security");

                    b.HasData(
                        new
                        {
                            ClaimId = 2,
                            UserId = 2,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Security.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", "Security");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            UserId = 1,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643)
                        },
                        new
                        {
                            RoleId = 2,
                            UserId = 1,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643)
                        },
                        new
                        {
                            RoleId = 3,
                            UserId = 1,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643)
                        },
                        new
                        {
                            RoleId = 2,
                            UserId = 3,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643)
                        },
                        new
                        {
                            RoleId = 3,
                            UserId = 2,
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 275, DateTimeKind.Utc).AddTicks(5643)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Translation.ClaimTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.ToTable("ClaimTranslation", "Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b6c60634-d99d-4712-af4a-43d8cd4018e6"),
                            ClaimId = 1,
                            Content = "Puno pravo",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 274, DateTimeKind.Utc).AddTicks(9489),
                            CultureName = "hr-HR"
                        },
                        new
                        {
                            Id = new Guid("96cb1977-adae-461e-8a77-f33abc1a0cfc"),
                            ClaimId = 1,
                            Content = "Full access",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 274, DateTimeKind.Utc).AddTicks(9489),
                            CultureName = "en-US"
                        },
                        new
                        {
                            Id = new Guid("be76947b-cbd2-4de6-b4a1-0f2fa5e42434"),
                            ClaimId = 2,
                            Content = "Upravljanje korisnicima",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 274, DateTimeKind.Utc).AddTicks(9489),
                            CultureName = "hr-HR"
                        },
                        new
                        {
                            Id = new Guid("62eca795-8510-46fc-b578-9505cc624d7a"),
                            ClaimId = 2,
                            Content = "Managing users",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 274, DateTimeKind.Utc).AddTicks(9489),
                            CultureName = "en-US"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Translation.CultureTypeTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CultureTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CultureTypeId");

                    b.ToTable("CultureTypeTranslation", "Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9d4933c0-f86a-4cf5-9e05-01c7422545d0"),
                            Content = "Hrvatski",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 274, DateTimeKind.Utc).AddTicks(9489),
                            CultureName = "hr-HR",
                            CultureTypeId = 1
                        },
                        new
                        {
                            Id = new Guid("f212e54b-9290-445f-821d-de477d419963"),
                            Content = "English",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 274, DateTimeKind.Utc).AddTicks(9489),
                            CultureName = "en-US",
                            CultureTypeId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.Translation.RoleTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleTranslation", "Translation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d28eea5-d192-4fa1-a8ef-f41d69217fe0"),
                            Content = "Administrator",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 274, DateTimeKind.Utc).AddTicks(9489),
                            CultureName = "hr-HR",
                            RoleId = 1
                        },
                        new
                        {
                            Id = new Guid("dde0d4ba-f47f-4782-af24-5ba2d55d8420"),
                            Content = "Administrator",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 274, DateTimeKind.Utc).AddTicks(9489),
                            CultureName = "en-US",
                            RoleId = 1
                        },
                        new
                        {
                            Id = new Guid("003a4449-fc03-4c38-abf7-34c304a04fa2"),
                            Content = "Bussiness",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 274, DateTimeKind.Utc).AddTicks(9489),
                            CultureName = "hr-HR",
                            RoleId = 1
                        },
                        new
                        {
                            Id = new Guid("b8be5252-44da-4c7e-addc-e4334322574c"),
                            Content = "Poslovni",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 274, DateTimeKind.Utc).AddTicks(9489),
                            CultureName = "en-US",
                            RoleId = 1
                        },
                        new
                        {
                            Id = new Guid("b12d4617-04aa-46fb-be4c-40cf663c13b9"),
                            Content = "Klijent",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 274, DateTimeKind.Utc).AddTicks(9489),
                            CultureName = "hr-HR",
                            RoleId = 3
                        },
                        new
                        {
                            Id = new Guid("27876906-c25c-4a41-a24c-2877c502a3b8"),
                            Content = "Client",
                            CreatedBy = "Migration",
                            CreatedOn = new DateTime(2025, 6, 2, 17, 18, 11, 274, DateTimeKind.Utc).AddTicks(9489),
                            CultureName = "en-US",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.Core.User", b =>
                {
                    b.HasOne("Domain.Entities.Core.CultureType", "CultureType")
                        .WithMany()
                        .HasForeignKey("CultureTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Country");

                            b1.Property<string>("PostalCode")
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)")
                                .HasColumnName("PostalCode");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Street");

                            b1.HasKey("UserId");

                            b1.ToTable("User", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = 1,
                                    City = "Zagreb",
                                    Country = "Croatia",
                                    PostalCode = "10000",
                                    Street = "Ilica 10"
                                },
                                new
                                {
                                    UserId = 2,
                                    City = "Zagreb",
                                    Country = "Croatia",
                                    PostalCode = "10000",
                                    Street = "Ilica 255"
                                },
                                new
                                {
                                    UserId = 3,
                                    City = "Zagreb",
                                    Country = "Croatia",
                                    PostalCode = "10000",
                                    Street = "Taborska 15"
                                });
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("CultureType");
                });

            modelBuilder.Entity("Domain.Entities.Security.RefreshToken", b =>
                {
                    b.HasOne("Domain.Entities.Core.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Security.UserClaim", b =>
                {
                    b.HasOne("Domain.Entities.Security.Claim", "Claim")
                        .WithMany()
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Core.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Security.UserRole", b =>
                {
                    b.HasOne("Domain.Entities.Security.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Core.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Translation.ClaimTranslation", b =>
                {
                    b.HasOne("Domain.Entities.Security.Claim", null)
                        .WithMany("Translations")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Translation.CultureTypeTranslation", b =>
                {
                    b.HasOne("Domain.Entities.Core.CultureType", null)
                        .WithMany("Translations")
                        .HasForeignKey("CultureTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Translation.RoleTranslation", b =>
                {
                    b.HasOne("Domain.Entities.Security.Role", null)
                        .WithMany("Translations")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Core.CultureType", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("Domain.Entities.Core.User", b =>
                {
                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("Domain.Entities.Security.Claim", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("Domain.Entities.Security.Role", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
